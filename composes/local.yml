version: "3"

services:
  talkspace-backend:
    image: hoanghy/talkspace-backend
    env_file: ".env"
    volumes:
      - mongo-data:/data/db
      - ./docker/mongo/rs-init.sh:/scripts/mongo/rs-init.sh
    ports:
      - ${PORT}:9000
    depends_on:
      - mongo
      - tracing
      - cache
    networks:
      - app-network

  mongo:
    image: mongo
    container_name: mongo
    env_file: ".env"
    restart: always
    command: ["--replSet", "rs0", "--bind_ip_all", "--port", "27017"]
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'mongo:27017'}]}) }" | mongosh --port 27017 --quiet
      interval: 5s
      timeout: 30s
      start_period: 0s
      start_interval: 1s
      retries: 30
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  tracing:
    image: jaegertracing/all-in-one:latest
    container_name: tracing
    ports:
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 14250:14250
      - 14268:14268
      - 14269:14269
      - 9411:9411
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false # Disable security (for basic usage)
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - elk
      - app-network

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.1
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  cache:
    image: redis:latest
    mem_limit: 1g
    container_name: cache
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]
    restart: always
    networks:
      - app-network

volumes:
  mongo-data:
  es_data:
    driver: local
  redis-data:
    driver: local

networks:
  app-network:
    driver: bridge
  elk:
    driver: bridge
